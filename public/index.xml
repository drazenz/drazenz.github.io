<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Drazen Zaric</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Drazen Zaric</description>
    <generator>Hugo -- 0.144.2</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 07 Apr 2024 23:36:23 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LLM Quantization From Scratch - How are empty models instantiated for low memory usage?</title>
      <link>http://localhost:1313/blog/quantization_hf_empty_instantiation/</link>
      <pubDate>Sun, 07 Apr 2024 23:36:23 +0200</pubDate>
      <guid>http://localhost:1313/blog/quantization_hf_empty_instantiation/</guid>
      <description>&lt;p&gt;Say we want to do post-training quantization of an LLM.&lt;/p&gt;
&lt;p&gt;For PyTorch models, we&amp;rsquo;ll usually have an implementation defaulting to &lt;code&gt;bfloat16&lt;/code&gt; and &lt;code&gt;torch.nn&lt;/code&gt; layers, such as &lt;code&gt;torch.nn.Linear&lt;/code&gt; and &lt;code&gt;torch.nn.Embedding&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll also have pretrained weights. For a HuggingFace model they&amp;rsquo;ll come in a bunch of &lt;code&gt;.safetensors&lt;/code&gt; files, accompanied by model configs.&lt;/p&gt;
&lt;p&gt;To get a quantized model, we can simply:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;load the pretrained model into memory (cpu or gpu)&lt;/p&gt;
&lt;p&gt;Do this with the default, non-quantized dtype, usually &lt;code&gt;bfloat16&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
